(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([[11],{"129f":function(n,t,e){"use strict";e.r(t),t["default"]='\n\n\x3c!-- @import "[TOC]" {cmd="toc" depthFrom=1 depthTo=6 orderedList=false} --\x3e\n\n\x3c!-- code_chunk_output --\x3e\n\n- [1. 计算机网络概述](#1-计算机网络概述)\n  - [1.1. 基本术语](#11-基本术语)\n  - [1.2. 重要知识点总结](#12-重要知识点总结)\n- [2. 物理层（Physical Layer）](#2-物理层physical-layer)\n  - [2.1. 基本术语](#21-基本术语)\n  - [2.2. 重要知识点总结](#22-重要知识点总结)\n  - [2.3. 补充](#23-补充)\n    - [2.3.1. 物理层主要做啥？](#231-物理层主要做啥)\n    - [2.3.2. 几种常用的信道复用技术](#232-几种常用的信道复用技术)\n    - [2.3.3. 几种常用的宽带接入技术，主要是 ADSL 和 FTTx](#233-几种常用的宽带接入技术主要是-adsl-和-fttx)\n- [3. 数据链路层（Data Link Layer）](#3-数据链路层data-link-layer)\n  - [3.1. 基本术语](#31-基本术语)\n  - [3.2. 重要知识点总结](#32-重要知识点总结)\n  - [3.3. 补充](#33-补充)\n- [4. 网络层（Network Layer）](#4-网络层network-layer)\n  - [4.1. 基本术语](#41-基本术语)\n  - [4.2. 重要知识点总结](#42-重要知识点总结)\n- [5. 传输层（Transport Layer）](#5-传输层transport-layer)\n  - [5.1. 基本术语](#51-基本术语)\n  - [5.2. 重要知识点总结](#52-重要知识点总结)\n  - [5.3. 补充（重要）](#53-补充重要)\n- [6. 应用层（Application Layer）](#6-应用层application-layer)\n  - [6.1. 基本术语](#61-基本术语)\n  - [6.2. 重要知识点总结](#62-重要知识点总结)\n  - [6.3. 补充（重要）](#63-补充重要)\n\n\x3c!-- /code_chunk_output --\x3e\n\n\n## 1. 计算机网络概述\n\n### 1.1. 基本术语\n\n1. **结点 （node）** ：网络中的结点可以是计算机，集线器，交换机或路由器等。\n2. **链路（link ）** : 从一个结点到另一个结点的一段物理线路。中间没有任何其他交点。\n3. **主机（host）** ：连接在因特网上的计算机。\n4. **ISP（Internet Service Provider）** ：因特网服务提供者（提供商）。\n\n![ISP (Internet Service Provider) Definition](计算机网络知识总结.assets/b83f6951e3f8f4bcde5b227257d603a8.png)\n\n5. **IXP（Internet eXchange Point）** ： 互联网交换点 IXP 的主要作用就是允许两个网络直接相连并交换分组，而不需要再通过第三个网络来转发分组。\n\n![IXP Traffic Levels During the Stratos Skydive — RIPE Labs](计算机网络知识总结.assets/7a9568a9e94001fc110801addc8c4ec0.png)\n\n<p style="text-align:center;font-size:13px;color:gray">https://labs.ripe.net/Members/fergalc/ixp-traffic-during-stratos-skydive</p>\n\n6. **RFC(Request For Comments)** ：意思是“请求评议”，包含了关于 Internet 几乎所有的重要的文字资料。\n7. **广域网 WAN（Wide Area Network）** ：任务是通过长距离运送主机发送的数据。\n8. **城域网 MAN（Metropolitan Area Network）**：用来将多个局域网进行互连。\n9. **局域网 LAN（Local Area Network）** ： 学校或企业大多拥有多个互连的局域网。\n\n![MAN & WMAN | Red de área metropolitana, Redes informaticas, Par trenzado](计算机网络知识总结.assets/25a5789f8e18995c649f2f864d51e7a9.png)\n\n<p style="text-align:center;font-size:13px;color:gray">http://conexionesmanwman.blogspot.com/</p>\n\n10. **个人区域网 PAN（Personal Area Network）** ：在个人工作的地方把属于个人使用的电子设备用无线技术连接起来的网络 。\n\n![Advantages and disadvantages of personal area network (PAN) - IT Release](计算机网络知识总结.assets/5c99dd6011439b1fab6cd2fece155dd5.png)\n\n<p style="text-align:center;font-size:13px;color:gray">https://www.itrelease.com/2018/07/advantages-and-disadvantages-of-personal-area-network-pan/</p>\n\n12. **分组（packet ）** ：因特网中传送的数据单元。由首部 header 和数据段组成。分组又称为包，首部可称为包头。\n13. **存储转发（store and forward ）** ：路由器收到一个分组，先检查分组是否正确，并过滤掉冲突包错误。确定包正确后，取出目的地址，通过查找表找到想要发送的输出端口地址，然后将该包发送出去。\n\n![](计算机网络知识总结.assets/20201025142342169.gif)\n\n14. **带宽（bandwidth）** ：在计算机网络中，表示在单位时间内从网络中的某一点到另一点所能通过的“最高数据率”。常用来表示网络的通信线路所能传送数据的能力。单位是“比特每秒”，记为 b/s。\n15. **吞吐量（throughput ）** ：表示在单位时间内通过某个网络（或信道、接口）的数据量。吞吐量更经常地用于对现实世界中的网络的一种测量，以便知道实际上到底有多少数据量能够通过网络。吞吐量受网络的带宽或网络的额定速率的限制。\n\n### 1.2. 重要知识点总结\n\n1. **计算机网络（简称网络）把许多计算机连接在一起，而互联网把许多网络连接在一起，是网络的网络。**\n2. 小写字母 i 开头的 internet（互联网）是通用名词，它泛指由多个计算机网络相互连接而成的网络。在这些网络之间的通信协议（即通信规则）可以是任意的。大写字母 I 开头的 Internet（互联网）是专用名词，它指全球最大的，开放的，由众多网络相互连接而成的特定的互联网，并采用 TCP/IP 协议作为通信规则，其前身为 ARPANET。Internet 的推荐译名为因特网，现在一般流行称为互联网。\n3. 路由器是实现分组交换的关键构件，其任务是转发收到的分组，这是网络核心部分最重要的功能。分组交换采用存储转发技术，表示把一个报文（要发送的整块数据）分为几个分组后再进行传送。在发送报文之前，先把较长的报文划分成为一个个更小的等长数据段。在每个数据端的前面加上一些由必要的控制信息组成的首部后，就构成了一个分组。分组又称为包。分组是在互联网中传送的数据单元，正是由于分组的头部包含了诸如目的地址和源地址等重要控制信息，每一个分组才能在互联网中独立的选择传输路径，并正确地交付到分组传输的终点。\n4. 互联网按工作方式可划分为边缘部分和核心部分。主机在网络的边缘部分，其作用是进行信息处理。由大量网络和连接这些网络的路由器组成核心部分，其作用是提供连通性和交换。\n5. 计算机通信是计算机中进程（即运行着的程序）之间的通信。计算机网络采用的通信方式是客户-服务器方式（C/S 方式）和对等连接方式（P2P 方式）。\n6. 客户和服务器都是指通信中所涉及的应用进程。客户是服务请求方，服务器是服务提供方。\n7. 按照作用范围的不同，计算机网络分为广域网 WAN，城域网 MAN，局域网 LAN，个人区域网 PAN。\n8. **计算机网络最常用的性能指标是：速率，带宽，吞吐量，时延（发送时延，处理时延，排队时延），时延带宽积，往返时间和信道利用率。**\n9. 网络协议即协议，是为进行网络中的数据交换而建立的规则。计算机网络的各层以及其协议集合，称为网络的体系结构。\n10. **五层体系结构由应用层，运输层，网络层（网际层），数据链路层，物理层组成。运输层最主要的协议是 TCP 和 UDP 协议，网络层最重要的协议是 IP 协议。**\n\n![s](计算机网络知识总结.assets/2020102514243717.png)\n\n下面的内容会介绍计算机网络的五层体系结构：**物理层+数据链路层+网络层（网际层）+运输层+应用层**。\n\n## 2. 物理层（Physical Layer）\n\n![物理层](计算机网络知识总结.assets/4749289d6e152bab1c8a8ccfc946a797.png)\n\n### 2.1. 基本术语\n\n1. **数据（data）** :运送消息的实体。\n2. **信号（signal）** ：数据的电气的或电磁的表现。或者说信号是适合在传输介质上传输的对象。\n3. **码元（ code）** ：在使用时间域（或简称为时域）的波形来表示数字信号时，代表不同离散数值的基本波形。\n4. **单工（simplex ）** : 只能有一个方向的通信而没有反方向的交互。\n5. **半双工（half duplex ）** ：通信的双方都可以发送信息，但不能双方同时发送(当然也就不能同时接收)。\n6. **全双工（full duplex）** : 通信的双方可以同时发送和接收信息。\n\n![](计算机网络知识总结.assets/c5be4756d2d6f46cbb6d785d5b86faf1.png)\n\n7. **失真**：失去真实性，主要是指接受到的信号和发送的信号不同，有磨损和衰减。影响失真程度的因素：1.码元传输速率 2.信号传输距离 3.噪声干扰 4.传输媒体质量\n\n![](计算机网络知识总结.assets/aef3aac72e86c1ee6ccb8a91647f656c.png)\n\n8. **奈氏准则** : 在任何信道中，码元的传输的效率是有上限的，传输速率超过此上限，就会出现严重的码间串扰问题，使接收端对码元的判决（即识别）成为不可能。\n9. **香农定理** ：在带宽受限且有噪声的信道中，为了不产生误差，信息的数据传输速率有上限值。\n10. **基带信号（baseband signal）** : 来自信源的信号。指没有经过调制的数字信号或模拟信号。\n11. **带通（频带）信号（bandpass signal）** ：把基带信号经过载波调制后，把信号的频率范围搬移到较高的频段以便在信道中传输（即仅在一段频率范围内能够通过信道），这里调制过后的信号就是带通信号。\n12. **调制（modulation ）** : 对信号源的信息进行处理后加到载波信号上，使其变为适合在信道传输的形式的过程。\n13. **信噪比（signal-to-noise ratio ）** : 指信号的平均功率和噪声的平均功率之比，记为 S/N。信噪比（dB）=10\\*log10（S/N）。\n14. **信道复用（channel multiplexing ）** ：指多个用户共享同一个信道。（并不一定是同时）。\n\n![信道复用技术](计算机网络知识总结.assets/a4889adaad3314f882e2cfab5f382064.png)\n\n15. **比特率（bit rate ）** ：单位时间（每秒）内传送的比特数。\n16. **波特率（baud rate）** ：单位时间载波调制状态改变的次数。针对数据信号对载波的调制速率。\n17. **复用（multiplexing）** ：共享信道的方法。\n18. **ADSL（Asymmetric Digital Subscriber Line ）** ：非对称数字用户线。\n19. **光纤同轴混合网（HFC 网）** :在目前覆盖范围很广的有线电视网的基础上开发的一种居民宽带接入网\n\n### 2.2. 重要知识点总结\n\n1. **物理层的主要任务就是确定与传输媒体接口有关的一些特性，如机械特性，电气特性，功能特性，过程特性。**\n2. 一个数据通信系统可划分为三大部分，即源系统，传输系统，目的系统。源系统包括源点（或源站，信源）和发送器，目的系统包括接收器和终点。\n3. **通信的目的是传送消息。如话音，文字，图像等都是消息，数据是运送消息的实体。信号则是数据的电器或电磁的表现。**\n4. 根据信号中代表消息的参数的取值方式不同，信号可分为模拟信号（或连续信号）和数字信号（或离散信号）。在使用时间域（简称时域）的波形表示数字信号时，代表不同离散数值的基本波形称为码元。\n5. 根据双方信息交互的方式，通信可划分为单向通信（或单工通信），双向交替通信（或半双工通信），双向同时通信（全双工通信）。\n6. 来自信源的信号称为基带信号。信号要在信道上传输就要经过调制。调制有基带调制和带通调制之分。最基本的带通调制方法有调幅，调频和调相。还有更复杂的调制方法，如正交振幅调制。\n7. 要提高数据在信道上的传递速率，可以使用更好的传输媒体，或使用先进的调制技术。但数据传输速率不可能任意被提高。\n8. 传输媒体可分为两大类，即导引型传输媒体（双绞线，同轴电缆，光纤）和非导引型传输媒体（无线，红外，大气激光）。\n9. 了有效利用光纤资源，在光纤干线和用户之间广泛使用无源光网络 PON。无源光网络无需配备电源，其长期运营成本和管理成本都很低。最流行的无源光网络是以太网无源光网络 EPON 和吉比特无源光网络 GPON。\n\n### 2.3. 补充\n\n#### 2.3.1. 物理层主要做啥？\n\n物理层主要做的事情就是 **透明地传送比特流**。也可以将物理层的主要任务描述为确定与传输媒体的接口的一些特性，即：机械特性（接口所用接线器的一些物理属性如形状尺寸），电气特性（接口电缆的各条线上出现的电压的范围），功能特性（某条线上出现的某一电平的电压的意义），过程特性（对于不同功能能的各种可能事件的出现顺序）。\n\n**物理层考虑的是怎样才能在连接各种计算机的传输媒体上传输数据比特流，而不是指具体的传输媒体。** 现有的计算机网络中的硬件设备和传输媒体的种类非常繁多，而且通信手段也有许多不同的方式。物理层的作用正是尽可能地屏蔽掉这些传输媒体和通信手段的差异，使物理层上面的数据链路层感觉不到这些差异，这样就可以使数据链路层只考虑完成本层的协议和服务，而不必考虑网络的具体传输媒体和通信手段是什么。\n\n#### 2.3.2. 几种常用的信道复用技术\n\n1. **频分复用(FDM)** ：所有用户在同样的时间占用不同的带宽资源。\n2. **时分复用（TDM）** ：所有用户在不同的时间占用同样的频带宽度（分时不分频）。\n3. **统计时分复用 (Statistic TDM)** ：改进的时分复用，能够明显提高信道的利用率。\n4. **码分复用(CDM)** ： 用户使用经过特殊挑选的不同码型，因此各用户之间不会造成干扰。这种系统发送的信号有很强的抗干扰能力，其频谱类似于白噪声，不易被敌人发现。\n5. **波分复用( WDM)** ：波分复用就是光的频分复用。\n\n#### 2.3.3. 几种常用的宽带接入技术，主要是 ADSL 和 FTTx\n\n用户到互联网的宽带接入方法有非对称数字用户线 ADSL（用数字技术对现有的模拟电话线进行改造，而不需要重新布线。ASDL 的快速版本是甚高速数字用户线 VDSL。），光纤同轴混合网 HFC（是在目前覆盖范围很广的有线电视网的基础上开发的一种居民宽带接入网）和 FTTx（即光纤到······）。\n\n## 3. 数据链路层（Data Link Layer）\n\n![数据链路层](计算机网络知识总结.assets/2-data-link-layer.svg)\n\n### 3.1. 基本术语\n\n1. **链路（link）** ：一个结点到相邻结点的一段物理链路。\n2. **数据链路（data link）** ：把实现控制数据运输的协议的硬件和软件加到链路上就构成了数据链路。\n3. **循环冗余检验 CRC（Cyclic Redundancy Check）** ：为了保证数据传输的可靠性，CRC 是数据链路层广泛使用的一种检错技术。\n4. **帧（frame）** ：一个数据链路层的传输单元，由一个数据链路层首部和其携带的封包所组成协议数据单元。\n5. **MTU（Maximum Transfer Uint ）** ：最大传送单元。帧的数据部分的的长度上限。\n6. **误码率 BER（Bit Error Rate ）** ：在一段时间内，传输错误的比特占所传输比特总数的比率。\n7. **PPP（Point-to-Point Protocol ）** ：点对点协议。即用户计算机和 ISP 进行通信时所使用的数据链路层协议。以下是 PPP 帧的示意图：\n   ![PPP](计算机网络知识总结.assets/298dbdeb16f98cec02c3954d8d95c1d6.png)\n8. **MAC 地址（Media Access Control 或者 Medium Access Control）** ：意译为媒体访问控制，或称为物理地址、硬件地址，用来定义网络设备的位置。在 OSI 模型中，第三层网络层负责 IP 地址，第二层数据链路层则负责 MAC 地址。因此一个主机会有一个 MAC 地址，而每个网络位置会有一个专属于它的 IP 地址 。地址是识别某个系统的重要标识符，“名字指出我们所要寻找的资源，地址指出资源所在的地方，路由告诉我们如何到达该处。\n\n![ARP (Address Resolution Protocol) explained](计算机网络知识总结.assets/002b2e6e45d66e805008fafc310afef0.png)\n\n9. **网桥（bridge）** ：一种用于数据链路层实现中继，连接两个或多个局域网的网络互连设备。\n10. **交换机（switch ）** ：广义的来说，交换机指的是一种通信系统中完成信息交换的设备。这里工作在数据链路层的交换机指的是交换式集线器，其实质是一个多接口的网桥\n\n### 3.2. 重要知识点总结\n\n1. 链路是从一个结点到相邻节点的一段物理链路，数据链路则在链路的基础上增加了一些必要的硬件（如网络适配器）和软件（如协议的实现）\n2. 数据链路层使用的主要是**点对点信道**和**广播信道**两种。\n3. 数据链路层传输的协议数据单元是帧。数据链路层的三个基本问题是：**封装成帧**，**透明传输**和**差错检测**\n4. **循环冗余检验 CRC** 是一种检错方法，而帧检验序列 FCS 是添加在数据后面的冗余码\n5. **点对点协议 PPP** 是数据链路层使用最多的一种协议，它的特点是：简单，只检测差错而不去纠正差错，不使用序号，也不进行流量控制，可同时支持多种网络层协议\n6. PPPoE 是为宽带上网的主机使用的链路层协议\n7. **局域网的优点是：具有广播功能，从一个站点可方便地访问全网；便于系统的扩展和逐渐演变；提高了系统的可靠性，可用性和生存性。**\n8. 计算机与外接局域网通信需要通过通信适配器（或网络适配器），它又称为网络接口卡或网卡。**计算器的硬件地址就在适配器的 ROM 中**。\n9. 以太网采用的无连接的工作方式，对发送的数据帧不进行编号，也不要求对方发回确认。目的站收到有差错帧就把它丢掉，其他什么也不做\n10. 以太网采用的协议是具有冲突检测的**载波监听多点接入 CSMA/CD**。协议的特点是：**发送前先监听，边发送边监听，一旦发现总线上出现了碰撞，就立即停止发送。然后按照退避算法等待一段随机时间后再次发送。** 因此，每一个站点在自己发送数据之后的一小段时间内，存在这遭遇碰撞的可能性。以太网上的各站点平等的争用以太网信道\n11. 以太网的适配器具有过滤功能，它只接收单播帧，广播帧和多播帧。\n12. 使用集线器可以在物理层扩展以太网（扩展后的以太网仍然是一个网络）\n\n### 3.3. 补充\n\n1. 数据链路层的点对点信道和广播信道的特点，以及这两种信道所使用的协议（PPP 协议以及 CSMA/CD 协议）的特点\n2. 数据链路层的三个基本问题：**封装成帧**，**透明传输**，**差错检测**\n3. 以太网的 MAC 层硬件地址\n4. 适配器，转发器，集线器，网桥，以太网交换机的作用以及适用场合\n\n## 4. 网络层（Network Layer）\n\n![网络层](计算机网络知识总结.assets/fbf78bdcf3db11526ac1a234a8b98234.png)\n\n### 4.1. 基本术语\n\n1. **虚电路（Virtual Circuit）** : 在两个终端设备的逻辑或物理端口之间，通过建立的双向的透明传输通道。虚电路表示这只是一条逻辑上的连接，分组都沿着这条逻辑连接按照存储转发方式传送，而并不是真正建立了一条物理连接。\n2. **IP（Internet Protocol ）** : 网际协议 IP 是 TCP/IP 体系中两个最主要的协议之一，是 TCP/IP 体系结构网际层的核心。配套的有 ARP，RARP，ICMP，IGMP。\n3. **ARP（Address Resolution Protocol）** : 地址解析协议。地址解析协议 ARP 把 IP 地址解析为硬件地址。\n4. **ICMP（Internet Control Message Protocol ）** ：网际控制报文协议 （ICMP 允许主机或路由器报告差错情况和提供有关异常情况的报告）。\n5. **子网掩码（subnet mask ）** ：它是一种用来指明一个 IP 地址的哪些位标识的是主机所在的子网以及哪些位标识的是主机的位掩码。子网掩码不能单独存在，它必须结合 IP 地址一起使用。\n6. **CIDR（ Classless Inter-Domain Routing ）**：无分类域间路由选择 （特点是消除了传统的 A 类、B 类和 C 类地址以及划分子网的概念，并使用各种长度的“网络前缀”(network-prefix)来代替分类地址中的网络号和子网号）。\n7. **默认路由（default route）** ：当在路由表中查不到能到达目的地址的路由时，路由器选择的路由。默认路由还可以减小路由表所占用的空间和搜索路由表所用的时间。\n8. **路由选择算法（Virtual Circuit）** ：路由选择协议的核心部分。因特网采用自适应的，分层次的路由选择协议。\n\n### 4.2. 重要知识点总结\n\n1. **TCP/IP 协议中的网络层向上只提供简单灵活的，无连接的，尽最大努力交付的数据报服务。网络层不提供服务质量的承诺，不保证分组交付的时限所传送的分组可能出错，丢失，重复和失序。进程之间通信的可靠性由运输层负责**\n2. 在互联网的交付有两种，一是在本网络直接交付不用经过路由器，另一种是和其他网络的间接交付，至少经过一个路由器，但最后一次一定是直接交付\n3. 分类的 IP 地址由网络号字段（指明网络）和主机号字段（指明主机）组成。网络号字段最前面的类别指明 IP 地址的类别。IP 地址是一种分等级的地址结构。IP 地址管理机构分配 IP 地址时只分配网络号，主机号由得到该网络号的单位自行分配。路由器根据目的主机所连接的网络号来转发分组。一个路由器至少连接到两个网络，所以一个路由器至少应当有两个不同的 IP 地址\n4. IP 数据报分为首部和数据两部分。首部的前一部分是固定长度，共 20 字节，是所有 IP 数据包必须具有的（源地址，目的地址，总长度等重要地段都固定在首部）。一些长度可变的可选字段固定在首部的后面。IP 首部中的生存时间给出了 IP 数据报在互联网中所能经过的最大路由器数。可防止 IP 数据报在互联网中无限制的兜圈子。\n5. **地址解析协议 ARP 把 IP 地址解析为硬件地址。ARP 的高速缓存可以大大减少网络上的通信量。因为这样可以使主机下次再与同样地址的主机通信时，可以直接从高速缓存中找到所需要的硬件地址而不需要再去广播方式发送 ARP 请求分组**\n6. 无分类域间路由选择 CIDR 是解决目前 IP 地址紧缺的一个好办法。CIDR 记法把 IP 地址后面加上斜线“/”，然后写上前缀所所占的位数。前缀（或网络前缀用来指明网络），前缀后面的部分是后缀，用来指明主机。CIDR 把前缀都相同的连续的 IP 地址组成一个“CIDR 地址块”，IP 地址分配都以 CIDR 地址块为单位。\n7. 网际控制报文协议是 IP 层的协议。ICMP 报文作为 IP 数据报的数据，加上首部后组成 IP 数据报发送出去。使用 ICMP 数据报并不是为了实现可靠传输。ICMP 允许主机或路由器报告差错情况和提供有关异常情况的报告。ICMP 报文的种类有两种 ICMP 差错报告报文和 ICMP 询问报文。\n8. **要解决 IP 地址耗尽的问题，最根本的办法是采用具有更大地址空间的新版本 IP 协议-IPv6。** IPv6 所带来的变化有 ① 更大的地址空间（采用 128 位地址）② 灵活的首部格式 ③ 改进的选项 ④ 支持即插即用 ⑤ 支持资源的预分配 ⑥IPv6 的首部改为 8 字节对齐。\n9. **虚拟专用网络 VPN 利用公用的互联网作为本机构专用网之间的通信载体。VPN 内使用互联网的专用地址。一个 VPN 至少要有一个路由器具有合法的全球 IP 地址，这样才能和本系统的另一个 VPN 通过互联网进行通信。所有通过互联网传送的数据都需要加密。**\n10. MPLS 的特点是：① 支持面向连接的服务质量 ② 支持流量工程，平衡网络负载 ③ 有效的支持虚拟专用网 VPN。MPLS 在入口节点给每一个 IP 数据报打上固定长度的“标记”，然后根据标记在第二层（链路层）用硬件进行转发（在标记交换路由器中进行标记交换），因而转发速率大大加快。\n\n## 5. 传输层（Transport Layer）\n\n![传输层](计算机网络知识总结.assets/09eb87a29bed99775ef5bde5eb216971.png)\n\n### 5.1. 基本术语\n\n1. **进程（process）** ：指计算机中正在运行的程序实体。\n2. **应用进程互相通信** ：一台主机的进程和另一台主机中的一个进程交换数据的过程（另外注意通信真正的端点不是主机而是主机中的进程，也就是说端到端的通信是应用进程之间的通信）。\n3. **传输层的复用与分用** ：复用指发送方不同的进程都可以通过统一个运输层协议传送数据。分用指接收方的运输层在剥去报文的首部后能把这些数据正确的交付到目的应用进程。\n4. **TCP（Transmission Control Protocol）** ：传输控制协议。\n5. **UDP（User Datagram Protocol）** ：用户数据报协议。\n\n![TCP和UDP](计算机网络知识总结.assets/2bd5bf90676c338864807ade87b7bdea.png)\n\n6. **端口（port）** ：端口的目的是为了确认对方机器是那个进程在于自己进行交互，比如 MSN 和 QQ 的端口不同，如果没有端口就可能出现 QQ 进程和 MSN 交互错误。端口又称协议端口号。\n7. **停止等待协议（stop-and-wait）** ：指发送方每发送完一个分组就停止发送，等待对方确认，在收到确认之后在发送下一个分组。\n8. **流量控制** : 就是让发送方的发送速率不要太快，既要让接收方来得及接收，也不要使网络发生拥塞。\n9. **拥塞控制** ：防止过多的数据注入到网络中，这样可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提，就是网络能够承受现有的网络负荷。\n\n### 5.2. 重要知识点总结\n\n1. **运输层提供应用进程之间的逻辑通信，也就是说，运输层之间的通信并不是真正在两个运输层之间直接传输数据。运输层向应用层屏蔽了下面网络的细节（如网络拓补，所采用的路由选择协议等），它使应用进程之间看起来好像两个运输层实体之间有一条端到端的逻辑通信信道。**\n2. **网络层为主机提供逻辑通信，而运输层为应用进程之间提供端到端的逻辑通信。**\n3. 运输层的两个重要协议是用户数据报协议 UDP 和传输控制协议 TCP。按照 OSI 的术语，两个对等运输实体在通信时传送的数据单位叫做运输协议数据单元 TPDU（Transport Protocol Data Unit）。但在 TCP/IP 体系中，则根据所使用的协议是 TCP 或 UDP，分别称之为 TCP 报文段或 UDP 用户数据报。\n4. **UDP 在传送数据之前不需要先建立连接，远地主机在收到 UDP 报文后，不需要给出任何确认。虽然 UDP 不提供可靠交付，但在某些情况下 UDP 确是一种最有效的工作方式。 TCP 提供面向连接的服务。在传送数据之前必须先建立连接，数据传送结束后要释放连接。TCP 不提供广播或多播服务。由于 TCP 要提供可靠的，面向连接的传输服务，这一难以避免增加了许多开销，如确认，流量控制，计时器以及连接管理等。这不仅使协议数据单元的首部增大很多，还要占用许多处理机资源。**\n5. 硬件端口是不同硬件设备进行交互的接口，而软件端口是应用层各种协议进程与运输实体进行层间交互的一种地址。UDP 和 TCP 的首部格式中都有源端口和目的端口这两个重要字段。当运输层收到 IP 层交上来的运输层报文时，就能够 根据其首部中的目的端口号把数据交付应用层的目的应用层。（两个进程之间进行通信不光要知道对方 IP 地址而且要知道对方的端口号(为了找到对方计算机中的应用进程)）\n6. 运输层用一个 16 位端口号标志一个端口。端口号只有本地意义，它只是为了标志计算机应用层中的各个进程在和运输层交互时的层间接口。在互联网的不同计算机中，相同的端口号是没有关联的。协议端口号简称端口。虽然通信的终点是应用进程，但只要把所发送的报文交到目的主机的某个合适端口，剩下的工作（最后交付目的进程）就由 TCP 和 UDP 来完成。\n7. 运输层的端口号分为服务器端使用的端口号（0~1023 指派给熟知端口，1024~49151 是登记端口号）和客户端暂时使用的端口号（49152~65535）\n8. **UDP 的主要特点是 ① 无连接 ② 尽最大努力交付 ③ 面向报文 ④ 无拥塞控制 ⑤ 支持一对一，一对多，多对一和多对多的交互通信 ⑥ 首部开销小（只有四个字段：源端口，目的端口，长度和检验和）**\n9. **TCP 的主要特点是 ① 面向连接 ② 每一条 TCP 连接只能是一对一的 ③ 提供可靠交付 ④ 提供全双工通信 ⑤ 面向字节流**\n10. **TCP 用主机的 IP 地址加上主机上的端口号作为 TCP 连接的端点。这样的端点就叫做套接字（socket）或插口。套接字用（IP 地址：端口号）来表示。每一条 TCP 连接唯一被通信两端的两个端点所确定。**\n11. 停止等待协议是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认。在收到确认后再发下一个分组。\n12. 为了提高传输效率，发送方可以不使用低效率的停止等待协议，而是采用流水线传输。流水线传输就是发送方可连续发送多个分组，不必每发完一个分组就停下来等待对方确认。这样可使信道上一直有数据不间断的在传送。这种传输方式可以明显提高信道利用率。\n13. 停止等待协议中超时重传是指只要超过一段时间仍然没有收到确认，就重传前面发送过的分组（认为刚才发送过的分组丢失了）。因此每发送完一个分组需要设置一个超时计时器，其重转时间应比数据在分组传输的平均往返时间更长一些。这种自动重传方式常称为自动重传请求 ARQ。另外在停止等待协议中若收到重复分组，就丢弃该分组，但同时还要发送确认。连续 ARQ 协议可提高信道利用率。发送维持一个发送窗口，凡位于发送窗口内的分组可连续发送出去，而不需要等待对方确认。接收方一般采用累积确认，对按序到达的最后一个分组发送确认，表明到这个分组位置的所有分组都已经正确收到了。\n14. TCP 报文段的前 20 个字节是固定的，后面有 4n 字节是根据需要增加的选项。因此，TCP 首部的最小长度是 20 字节。\n15. **TCP 使用滑动窗口机制。发送窗口里面的序号表示允许发送的序号。发送窗口后沿的后面部分表示已发送且已收到确认，而发送窗口前沿的前面部分表示不允许发送。发送窗口后沿的变化情况有两种可能，即不动（没有收到新的确认）和前移（收到了新的确认）。发送窗口的前沿通常是不断向前移动的。一般来说，我们总是希望数据传输更快一些。但如果发送方把数据发送的过快，接收方就可能来不及接收，这就会造成数据的丢失。所谓流量控制就是让发送方的发送速率不要太快，要让接收方来得及接收。**\n16. 在某段时间，若对网络中某一资源的需求超过了该资源所能提供的可用部分，网络的性能就要变坏。这种情况就叫拥塞。拥塞控制就是为了防止过多的数据注入到网络中，这样就可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提，就是网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机，所有的路由器，以及与降低网络传输性能有关的所有因素。相反，流量控制往往是点对点通信量的控制，是个端到端的问题。流量控制所要做到的就是抑制发送端发送数据的速率，以便使接收端来得及接收。\n17. **为了进行拥塞控制，TCP 发送方要维持一个拥塞窗口 cwnd 的状态变量。拥塞控制窗口的大小取决于网络的拥塞程度，并且动态变化。发送方让自己的发送窗口取为拥塞窗口和接收方的接受窗口中较小的一个。**\n18. **TCP 的拥塞控制采用了四种算法，即慢开始，拥塞避免，快重传和快恢复。在网络层也可以使路由器采用适当的分组丢弃策略（如主动队列管理 AQM），以减少网络拥塞的发生。**\n19. 运输连接的三个阶段，即：连接建立，数据传送和连接释放。\n20. **主动发起 TCP 连接建立的应用进程叫做客户，而被动等待连接建立的应用进程叫做服务器。TCP 连接采用三报文握手机制。服务器要确认用户的连接请求，然后客户要对服务器的确认进行确认。**\n21. TCP 的连接释放采用四报文握手机制。任何一方都可以在数据传送结束后发出连接释放的通知，待对方确认后进入半关闭状态。当另一方也没有数据再发送时，则发送连接释放通知，对方确认后就完全关闭了 TCP 连接\n\n### 5.3. 补充（重要）\n\n以下知识点需要重点关注：\n\n1. 端口和套接字的意义\n2. UDP 和 TCP 的区别以及两者的应用场景\n3. 在不可靠的网络上实现可靠传输的工作原理，停止等待协议和 ARQ 协议\n4. TCP 的滑动窗口，流量控制，拥塞控制和连接管理\n5. TCP 的三次握手，四次挥手机制\n\n## 6. 应用层（Application Layer）\n\n![应用层](计算机网络知识总结.assets/3ff57c0632bc7f4017723b1d1b7d3a52.png)\n\n### 6.1. 基本术语\n\n1. **域名系统（DNS）** ：域名系统（DNS，Domain Name System）将人类可读的域名 (例如，www.baidu.com) 转换为机器可读的 IP 地址 (例如，220.181.38.148)。我们可以将其理解为专为互联网设计的电话薄。\n\n![](计算机网络知识总结.assets/6af26a3293530061785df50e70d53e07.png)\n\n<p style="text-align:right;font-size:12px">https://www.seobility.net/en/wiki/HTTP_headers</p>\n\n2. **文件传输协议（FTP）** ：FTP 是 File TransferProtocol（文件传输协议）的英文简称，而中文简称为“文传协议”。用于 Internet 上的控制文件的双向传输。同时，它也是一个应用程序（Application）。基于不同的操作系统有不同的 FTP 应用程序，而所有这些应用程序都遵守同一种协议以传输文件。在 FTP 的使用当中，用户经常遇到两个概念："下载"（Download）和"上传"（Upload）。 "下载"文件就是从远程主机拷贝文件至自己的计算机上；"上传"文件就是将文件从自己的计算机中拷贝至远程主机上。用 Internet 语言来说，用户可通过客户机程序向（从）远程主机上传（下载）文件。\n\n![FTP工作过程](计算机网络知识总结.assets/3f1abf8adba4aa317eca69c489e3db23.png)\n\n3. **简单文件传输协议（TFTP）** ：TFTP（Trivial File Transfer Protocol,简单文件传输协议）是 TCP/IP 协议族中的一个用来在客户机与服务器之间进行简单文件传输的协议，提供不复杂、开销不大的文件传输服务。端口号为 69。\n4. **远程终端协议（TELNET）** ：Telnet 协议是 TCP/IP 协议族中的一员，是 Internet 远程登陆服务的标准协议和主要方式。它为用户提供了在本地计算机上完成远程主机工作的能力。在终端使用者的电脑上使用 telnet 程序，用它连接到服务器。终端使用者可以在 telnet 程序中输入命令，这些命令会在服务器上运行，就像直接在服务器的控制台上输入一样。可以在本地就能控制服务器。要开始一个 telnet 会话，必须输入用户名和密码来登录服务器。Telnet 是常用的远程控制 Web 服务器的方法。\n5. **万维网（WWW）** ：WWW 是环球信息网的缩写，（亦作“Web”、“WWW”、“\'W3\'”，英文全称为“World Wide Web”），中文名字为“万维网”，"环球网"等，常简称为 Web。分为 Web 客户端和 Web 服务器程序。WWW 可以让 Web 客户端（常用浏览器）访问浏览 Web 服务器上的页面。是一个由许多互相链接的超文本组成的系统，通过互联网访问。在这个系统中，每个有用的事物，称为一样“资源”；并且由一个全局“统一资源标识符”（URI）标识；这些资源通过超文本传输协议（Hypertext Transfer Protocol）传送给用户，而后者通过点击链接来获得资源。万维网联盟（英语：World Wide Web Consortium，简称 W3C），又称 W3C 理事会。1994 年 10 月在麻省理工学院（MIT）计算机科学实验室成立。万维网联盟的创建者是万维网的发明者蒂姆·伯纳斯-李。万维网并不等同互联网，万维网只是互联网所能提供的服务其中之一，是靠着互联网运行的一项服务。\n6. **万维网的大致工作工程：**\n\n![万维网的大致工作工程](计算机网络知识总结.assets/735f55501e81898aa61b8032f7dbcb73.png)\n\n7. **统一资源定位符（URL）** ：统一资源定位符是对可以从互联网上得到的资源的位置和访问方法的一种简洁的表示，是互联网上标准资源的地址。互联网上的每个文件都有一个唯一的 URL，它包含的信息指出文件的位置以及浏览器应该怎么处理它。\n8. **超文本传输协议（HTTP）** ：超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的 WWW 文件都必须遵守这个标准。设计 HTTP 最初的目的是为了提供一种发布和接收 HTML 页面的方法。1960 年美国人 Ted Nelson 构思了一种通过计算机处理文本信息的方法，并称之为超文本（hypertext）,这成为了 HTTP 超文本传输协议标准架构的发展根基。\n\nHTTP 协议的本质就是一种浏览器与服务器之间约定好的通信格式。HTTP 的原理如下图所示：\n\n![](计算机网络知识总结.assets/b273efef5f2388e26414135672b00295.png)\n\n10. **代理服务器（Proxy Server）** ： 代理服务器（Proxy Server）是一种网络实体，它又称为万维网高速缓存。 代理服务器把最近的一些请求和响应暂存在本地磁盘中。当新请求到达时，若代理服务器发现这个请求与暂时存放的的请求相同，就返回暂存的响应，而不需要按 URL 的地址再次去互联网访问该资源。代理服务器可在客户端或服务器工作，也可以在中间系统工作。\n11. **简单邮件传输协议(SMTP)** : SMTP（Simple Mail Transfer Protocol）即简单邮件传输协议,它是一组用于由源地址到目的地址传送邮件的规则，由它来控制信件的中转方式。 SMTP 协议属于 TCP/IP 协议簇，它帮助每台计算机在发送或中转信件时找到下一个目的地。 通过 SMTP 协议所指定的服务器,就可以把 E-mail 寄到收信人的服务器上了，整个过程只要几分钟。SMTP 服务器则是遵循 SMTP 协议的发送邮件服务器，用来发送或中转发出的电子邮件。\n\n![一个电子邮件被发送的过程](计算机网络知识总结.assets/b16da4d4fea63de5fce53f54973967d7.png)\n\n<p style="text-align:right;font-size:12px">https://www.campaignmonitor.com/resources/knowledge-base/what-is-the-code-that-makes-bcc-or-cc-operate-in-an-email/<p>\n\n11. **搜索引擎** :搜索引擎（Search Engine）是指根据一定的策略、运用特定的计算机程序从互联网上搜集信息，在对信息进行组织和处理后，为用户提供检索服务，将用户检索相关的信息展示给用户的系统。搜索引擎包括全文索引、目录索引、元搜索引擎、垂直搜索引擎、集合式搜索引擎、门户搜索引擎与免费链接列表等。\n\n![搜索引擎](计算机网络知识总结.assets/68fe865a9d87de361c45f4a42d624035.png)\n\n12. **垂直搜索引擎** ：垂直搜索引擎是针对某一个行业的专业搜索引擎，是搜索引擎的细分和延伸，是对网页库中的某类专门的信息进行一次整合，定向分字段抽取出需要的数据进行处理后再以某种形式返回给用户。垂直搜索是相对通用搜索引擎的信息量大、查询不准确、深度不够等提出来的新的搜索引擎服务模式，通过针对某一特定领域、某一特定人群或某一特定需求提供的有一定价值的信息和相关服务。其特点就是“专、精、深”，且具有行业色彩，相比较通用搜索引擎的海量信息无序化，垂直搜索引擎则显得更加专注、具体和深入。\n13. **全文索引** :全文索引技术是目前搜索引擎的关键技术。试想在 1M 大小的文件中搜索一个词，可能需要几秒，在 100M 的文件中可能需要几十秒，如果在更大的文件中搜索那么就需要更大的系统开销，这样的开销是不现实的。所以在这样的矛盾下出现了全文索引技术，有时候有人叫倒排文档技术。\n14. **目录索引** ：目录索引（ search index/directory)，顾名思义就是将网站分门别类地存放在相应的目录中，因此用户在查询信息时，可选择关键词搜索，也可按分类目录逐层查找。\n\n### 6.2. 重要知识点总结\n\n1. 文件传输协议（FTP）使用 TCP 可靠的运输服务。FTP 使用客户服务器方式。一个 FTP 服务器进程可以同时为多个用户提供服务。在进进行文件传输时，FTP 的客户和服务器之间要先建立两个并行的 TCP 连接:控制连接和数据连接。实际用于传输文件的是数据连接。\n2. 万维网客户程序与服务器之间进行交互使用的协议是超文本传输协议 HTTP。HTTP 使用 TCP 连接进行可靠传输。但 HTTP 本身是无连接、无状态的。HTTP/1.1 协议使用了持续连接（分为非流水线方式和流水线方式）\n3. 电子邮件把邮件发送到收件人使用的邮件服务器，并放在其中的收件人邮箱中，收件人可随时上网到自己使用的邮件服务器读取，相当于电子邮箱。\n4. 一个电子邮件系统有三个重要组成构件：用户代理、邮件服务器、邮件协议（包括邮件发送协议，如 SMTP，和邮件读取协议，如 POP3 和 IMAP）。用户代理和邮件服务器都要运行这些协议。\n\n### 6.3. 补充（重要）\n\n以下知识点需要重点关注：\n\n1. 应用层的常见协议（重点关注 HTTP 协议）\n2. 域名系统-从域名解析出 IP 地址\n3. 访问一个网站大致的过程\n4. 系统调用和应用编程接口概念\n'},"1b62":function(n,t,e){"use strict";e.d(t,"d",(function(){return r})),e.d(t,"c",(function(){return d})),e.d(t,"a",(function(){return C})),e.d(t,"b",(function(){return b}));e("4de4"),e("c975");var o=e("448a"),i=e.n(o),a=["/第1阶段-运维基本功（升级7.6版本）/01运维概述与Linux系统安装.pdf","/第1阶段-运维基本功（升级7.6版本）/02Linux基础命令.pdf"],s="linux/heima-Linux云计算",r={name:"Container",data:function(){return{prefix:s,book_options:a,book_options_all:[],show:!0,book:a[0],src:""}},created:function(){this.book_options_all=i()(this.book_options),this.src=this.$utils.compute_book_src(this.prefix+this.book)},watch:{book:function(n,t){n&&this.change_book()}},methods:{change_book:function(){console.log("this.book",this.book),this.src=this.$utils.compute_book_src(this.prefix+this.book)},filterFn:function(n,t){var e=this;t(""!==n?function(){var t=n.toLowerCase();e.book_options=e.book_options_all.filter((function(n){return n.toLowerCase().indexOf(t)>-1}))}:function(){e.book_options=e.book_options_all})}}},c=e("ded3"),l=e.n(c),P=e("2f62"),d={data:function(){return{tab:"",tab_level:1,is_active:!1}},computed:l()({},Object(P["c"])(["get_current_selected_right_menu"])),created:function(){this.is_active=!0,this.fix_right_menu_config()},watch:{tab:function(){this.tab||this.fix_right_menu_config()},get_current_selected_right_menu:function(n,t){this.tab=this.get_current_selected_right_menu["t"+this.tab_level]}},methods:l()(l()({},Object(P["b"])(["set_right_menu_fix_config"])),{},{fix_right_menu_config:function(){this.set_right_menu_fix_config({tl:this.tab_level,tabs:this.tabs||[],tv:this.tab||this.tabs[0]["value"]})}}),beforeDestroy:function(){this.is_active=!1}},T=(e("99af"),e("d81d"),e("fb6a"),e("a434"),e("07ac"),function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",{staticClass:"q-my-md q-mx-sm"},[e("div",{staticClass:"q-mb-md row q-gutter-x-md q-gutter-y-sm"},[e("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"","use-input":"","hide-selected":"","fill-input":"","input-debounce":"0",options:n.topic_options_filtered},on:{filter:n.filterFn,"filter-abort":n.abortFilterFn,input:n.handle_topic_change},scopedSlots:n._u([{key:"before",fn:function(){return[n._v("\n        主题\n      ")]},proxy:!0}]),model:{value:n.topic,callback:function(t){n.topic=t},expression:"topic"}}),e("q-select",{staticStyle:{width:"300px"},attrs:{dense:"",filled:"",options:n.column_options},on:{input:n.handle_column_change},scopedSlots:n._u([{key:"before",fn:function(){return[n._v("\n        列数\n      ")]},proxy:!0}]),model:{value:n.column,callback:function(t){n.column=t},expression:"column"}})],1),e("q-markup-table",{attrs:{dense:""}},[e("thead",[e("tr",[e("th",{staticClass:"text-left text-weight-bolder  ",attrs:{colspan:n.column}},[n._v("\n          "+n._s(n.table_title?n.table_title+"------":"")+"当前词条数量："+n._s(n.word_total)+"\n        ")])])]),e("tbody",[n._l(n.table_data,(function(t,o){return[n.compute_if_show(t)?e("tr",{key:o,class:n.compute_topic_options_style(t)},n._l(n.column,(function(o){return e("td",{key:o,staticClass:"text-left"},[n._v("\n            "+n._s(t[o-1])+"\n          ")])})),0):n._e()]}))],2)])],1)}),p=[],u=(e("caad"),e("a9e3"),e("2532"),{data:function(){return{topic:"全部",column:2,topic_options_filtered:[],topic_options_all:[]}},props:{table_title:{type:String,default:""},word_total:{type:Number,default:0},topic_options:{type:Array,default:function(){return[]}},column_options:{type:Array,default:function(){return[]}},table_data:{type:Array,default:function(){return[]}},show_empty_line:!1},watch:{topic_options:function(n,t){this.init_topic_options_related()},column_options:function(n,t){this.init_column()}},created:function(){this.init_topic_options_related(),this.init_column(),this.handle_column_change(),this.handle_topic_change()},methods:{init_topic_options_related:function(){this.topic_options_all=i()(this.topic_options),this.topic_options_filtered=i()(this.topic_options)},filterFn:function(n,t,e){var o=this;console.log("this.topic_options_all",this.topic_options_all),setTimeout((function(){t((function(){if(""===n)o.topic_options_filtered=i()(o.topic_options_all);else{var t=n.toLowerCase();o.topic_options_filtered=o.topic_options_all.filter((function(n){return n.toLowerCase().indexOf(t)>-1}))}o.$forceUpdate()}),(function(t){""!==n&&t.options.length>0&&(t.setOptionIndex(-1),t.moveOptionSelection(1,!0))}))}),300)},abortFilterFn:function(){},handle_column_change:function(){this.$emit("handle_column_change",this.column)},handle_topic_change:function(){this.$emit("handle_topic_change",this.topic)},init_column:function(){var n=this.$q.platform.is.desktop,t=window.innerWidth;t=n?t-200:t-100,t=t<370?370:t,console.log("ww",t);var e=Math.ceil(t/350);e=e<1?1:e,t<400&&(e=1),e=e>8?8:e,this.column=e},compute_topic_options_style:function(n){var t="",e=1==n.length&&this.topic_options.includes(n[0]);return t=e?"bg-teal-4":"",t},compute_if_show:function(n){if(this.show_empty_line)return!0;var t=n.filter((function(n){return n}));return t.length>0}}}),f=u,h=e("2877"),_=Object(h["a"])(f,T,p,!1,null,"4e74a874",null),m=_.exports,C={components:{excelTable:m},data:function(){return{workSheetsFromFile:[[{data:[]}]],table_title:"",column:8,word_total:0,table_data:[],table_data_all:[],column_options:[1,2,3,4,5,6,7,8],exclude_topic_options:!0,show_empty_line:!1,topic:"",topic_options:[]}},created:function(){this.init_workSheetsFromFile()},methods:{init_workSheetsFromFile:function(){},handle_column_change:function(n){this.column=n,this.init_data()},handle_topic_change:function(n){this.topic=n,console.log("this.topic----",this.topic),this.compute_table_data_show_and_word_total()},rebuild_arr_reduce_empty_line:function(n){var t=[[""]];return n.map((function(n){var e=n.filter((function(n){return n})),o=e.length;if(o)t.push(n);else{var i=t[t.length-1].filter((function(n){return n})).length,a=t[t.length-1].length;a>0&&i>0&&t.push([""])}})),t},init_data:function(){var n=this;console.log("workSheetsFromFile --------",this.workSheetsFromFile);var t=[],e={},o=[];this.workSheetsFromFile.map((function(n){t=t.concat(n["data"])}));var a=this.$lodash.cloneDeep(t[0].filter((function(n){return n})));a.map((function(n,t){e["key_"+t]={title:n,words_raw:[]}})),this.exclude_topic_options&&t.splice(0,1),t.map((function(n,t){n.map((function(n,t){e["key_"+t]["words_raw"].push(n)}))})),console.log("final_obj------------",e);var s=Object.values(e);s.map((function(t,e){o.push([t["title"]]),o=o.concat(n.$lodash.chunk(t["words_raw"],n.column)),o=o.concat([[""]])})),this.topic_options=["全部"].concat(i()(a)),this.table_data_all=this.rebuild_arr_reduce_empty_line(o),this.compute_table_data_show_and_word_total(),console.log("  this.table_data_all   ",this.table_data_all)},compute_table_data_show_and_word_total:function(){var n=[],t=[],e=0;if(t=this.$lodash.cloneDeep(this.table_data_all),console.log(" table_data--------",t),"全部"==this.topic)n=t;else{var o=this.topic_options.indexOf(this.topic),i=o==this.topic_options.length-1,a=i?"":this.topic_options[o+1],s=this.find_topic_index(this.topic),r=a?this.find_topic_index(a):t.length;n=t.slice(s,r)}n.map((function(n){var t=n.filter((function(n){return n})).length;e+=t})),this.word_total=e,this.table_data=n},find_topic_index:function(n){for(var t=0,e=0;e<this.table_data_all.length;e++){var o=this.table_data_all[e];if(1==o.length&&o[0]&&o[0]==n){t=e;break}}return t}}},b=(e("7db0"),e("ac1f"),e("1276"),{data:function(){return{relative_path:"",tab:"",tabs:[],MainComponent:"",img_prefix:"./img/linux/heima-Linux云计算/讲义/"}},methods:{extendMarkdown:function(n){var t=this;console.log(n.renderer.rules);var e=n.renderer.rules.html_block;n.renderer.rules.html_block=function(n,o,i,a,s){var r=n[o];if(console.log("1"),r.content.includes("<img")){console.log("token-- ",r);var c="";c=r.content;var l=c.split('src="'),P="",d=l[1];l[0],t.img_prefix,l[1],P=d.includes("http")?l[0]+' src="'+d:l[0]+' src="'+t.img_prefix+d,r.content=P}return r.attrSet("class","q-markdown--token  "),e(n,o,i,a,s)},n.renderer.rules.image=function(n,e,o,i,a){var s=n[e];console.log("3"),s.attrSet("class","q-markdown--image"),console.log("token--- "+e+"-----",s);var r=s.attrGet("src");return console.log(r),r.includes("http")?s.attrSet("src",r):s.attrSet("src",t.img_prefix+r),a.renderToken(n,e,o)}},compute_img_prefix:function(){var n=this;if(this.MainComponent){var t=this.tabs.find((function(t){return t["value"]==n.tab}));if(t&&t["modules_obj"]){var e=this.relative_path;this.img_prefix="."+e+(t["modules_obj"]["relative_folder"]||"")}else this.img_prefix="."+relative_path}}}})},3686:function(n,t,e){"use strict";e.d(t,"a",(function(){return l}));e("e260"),e("a15b"),e("d81d"),e("fb6a"),e("4e82"),e("d3b7"),e("ac1f"),e("5319"),e("1276"),e("ddb0");var o=e("ded3"),i=e.n(o),a=e("d958"),s=function(n){var t=a(n,{style:a.STYLE_NORMAL}),e="";return t.map((function(n){e+=n[0]})),e},r=function(n){if(!n)return"";var t="",e=n.split("/");return e.shift(),e.pop(),t=e.join("/"),t?"/"+t+"/":""},c=function(n){n=n||"";var t=n.split("/"),e=t.length;return t[e-1]},l=function(n){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"md",e=!(arguments.length>2&&void 0!==arguments[2])||arguments[2],o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],a=!(arguments.length>4&&void 0!==arguments[4])||arguments[4];console.log("当前 require.context---",n),console.log("当前 field_components.keys()---",n.keys());var l=n.keys(),P={},d=[],T={},p=[];return l.map((function(i){var a=/[^\u4E00-\u9FA5A-Za-z]+/g,c=i.slice(2,i.length-t.length-1),l="";e?(l=s(i).replace(a,""),l=l.slice(0,l.length-t.length)):l=c,p.push(c),T[c]={value:l,relative_path:i,relative_folder:r(i)},console.log("x---",i),P[l]=o?"\n            <div>\n            <code>\n              ".concat(n(i).default,"\n            </code>\n            </div>\n            "):n(i).default})),p.sort((function(n,t){return parseFloat(n)-parseFloat(t)})),p.map((function(n){d.push({label:a?c(n):n,value:T[n]["value"],modules_obj:i()({},T[n])})})),console.log("all_components------------",P),console.log("all_modules---------------",d),{all_components:P,all_modules:d}}},"3c62":function(n,t,e){"use strict";e.r(t);var o=function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("div",[e("q-markdown",{attrs:{extend:n.extendMarkdown,src:n.MainComponent}})],1)},i=[],a=e("3686"),s=e("1b62"),r=Object(a["a"])(e("9c39"),"md",!0),c=r.all_components,l=r.all_modules,P={mixins:[s["c"],s["b"]],data:function(){return{img_prefix:"./books/network/",tab:l[0].value,tab_level:1,MainComponent:c[l[0].value],tabs:l}},watch:{tab:function(n,t){this.MainComponent=c[this.tab]}}},d=P,T=e("2877"),p=Object(T["a"])(d,o,i,!1,null,"5a67e8e8",null);t["default"]=p.exports},8163:function(n,t,e){"use strict";e.r(t),t["default"]="## 一 OSI 与 TCP/IP 各层的结构与功能,都有哪些协议?\n\n学习计算机网络时我们一般采用折中的办法，也就是中和 OSI 和 TCP/IP 的优点，采用一种只有五层协议的体系结构，这样既简洁又能将概念阐述清楚。\n\n![五层体系结构](计算机网络.assets/五层体系结构.png)\n\n结合互联网的情况，自上而下地，非常简要的介绍一下各层的作用。\n\n### 1.1 应用层\n\n**应用层(application-layer）的任务是通过应用进程间的交互来完成特定网络应用。**应用层协议定义的是应用进程（进程：主机中正在运行的程序）间的通信和交互的规则。对于不同的网络应用需要不同的应用层协议。在互联网中应用层协议很多，如**域名系统 DNS**，支持万维网应用的 **HTTP 协议**，支持电子邮件的 **SMTP 协议**等等。我们把应用层交互的数据单元称为报文。\n\n**域名系统**\n\n> 域名系统(Domain Name System 缩写 DNS，Domain Name 被译为域名)是因特网的一项核心服务，它作为可以将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便的访问互联网，而不用去记住能够被机器直接读取的 IP 数串。（百度百科）例如：一个公司的 Web 网站可看作是它在网上的门户，而域名就相当于其门牌地址，通常域名都使用该公司的名称或简称。例如上面提到的微软公司的域名，类似的还有：IBM 公司的域名是 www.ibm.com、Oracle 公司的域名是 www.oracle.com、Cisco 公司的域名是 www.cisco.com 等。\n\n**HTTP 协议**\n\n> 超文本传输协议（HTTP，HyperText Transfer Protocol)是互联网上应用最为广泛的一种网络协议。所有的 WWW（万维网） 文件都必须遵守这个标准。设计 HTTP 最初的目的是为了提供一种发布和接收 HTML 页面的方法。（百度百科）\n\n### 1.2 运输层\n\n**运输层(transport layer)的主要任务就是负责向两台主机进程之间的通信提供通用的数据传输服务**。应用进程利用该服务传送应用层报文。“通用的”是指并不针对某一个特定的网络应用，而是多种应用可以使用同一个运输层服务。由于一台主机可同时运行多个线程，因此运输层有复用和分用的功能。所谓复用就是指多个应用层进程可同时使用下面运输层的服务，分用和复用相反，是运输层把收到的信息分别交付上面应用层中的相应进程。\n\n**运输层主要使用以下两种协议:**\n\n1. **传输控制协议 TCP**（Transmission Control Protocol）--提供**面向连接**的，**可靠的**数据传输服务。\n2. **用户数据协议 UDP**（User Datagram Protocol）--提供**无连接**的，尽最大努力的数据传输服务（**不保证数据传输的可靠性**）。\n\n**TCP 与 UDP 的对比见问题三。**\n\n### 1.3 网络层\n\n**在计算机网络中进行通信的两个计算机之间可能会经过很多个数据链路，也可能还要经过很多通信子网。网络层的任务就是选择合适的网间路由和交换结点， 确保数据及时传送。** 在发送数据时，网络层把运输层产生的报文段或用户数据报封装成分组和包进行传送。在 TCP/IP 体系结构中，由于网络层使用 **IP 协议**，因此分组也叫 **IP 数据报** ，简称 **数据报**。\n\n这里要注意：**不要把运输层的“用户数据报 UDP ”和网络层的“ IP 数据报”弄混**。另外，无论是哪一层的数据单元，都可笼统地用“分组”来表示。\n\n这里强调指出，网络层中的“网络”二字已经不是我们通常谈到的具体网络，而是指计算机网络体系结构模型中第三层的名称.\n\n互联网是由大量的异构（heterogeneous）网络通过路由器（router）相互连接起来的。互联网使用的网络层协议是无连接的网际协议（Internet Protocol）和许多路由选择协议，因此互联网的网络层也叫做**网际层**或**IP 层**。\n\n### 1.4 数据链路层\n\n**数据链路层(data link layer)通常简称为链路层。两台主机之间的数据传输，总是在一段一段的链路上传送的，这就需要使用专门的链路层的协议。** 在两个相邻节点之间传送数据时，**数据链路层将网络层交下来的 IP 数据报组装成帧**，在两个相邻节点间的链路上传送帧。每一帧包括数据和必要的控制信息（如同步信息，地址信息，差错控制等）。\n\n在接收数据时，控制信息使接收端能够知道一个帧从哪个比特开始和到哪个比特结束。这样，数据链路层在收到一个帧后，就可从中提出数据部分，上交给网络层。\n控制信息还使接收端能够检测到所收到的帧中有无差错。如果发现差错，数据链路层就简单地丢弃这个出了差错的帧，以避免继续在网络中传送下去白白浪费网络资源。如果需要改正数据在链路层传输时出现差错（这就是说，数据链路层不仅要检错，而且还要纠错），那么就要采用可靠性传输协议来纠正出现的差错。这种方法会使链路层的协议复杂些。\n\n### 1.5 物理层\n\n在物理层上所传送的数据单位是比特。\n\n**物理层(physical layer)的作用是实现相邻计算机节点之间比特流的透明传送，尽可能屏蔽掉具体传输介质和物理设备的差异，** 使其上面的数据链路层不必考虑网络的具体传输介质是什么。“透明传送比特流”表示经实际电路传送后的比特流没有发生变化，对传送的比特流来说，这个电路好像是看不见的。\n\n在互联网使用的各种协议中最重要和最著名的就是 TCP/IP 两个协议。现在人们经常提到的 TCP/IP 并不一定单指 TCP 和 IP 这两个具体的协议，而往往表示互联网所使用的整个 TCP/IP 协议族。\n\n### 1.6 总结一下\n\n上面我们对计算机网络的五层体系结构有了初步的了解，下面附送一张七层体系结构图总结一下（图片来源于网络）。\n\n![七层体系结构图](计算机网络.assets/七层体系结构图.png)\n\n## 二 TCP 三次握手和四次挥手(面试常客)\n\n为了准确无误地把数据送达目标处，TCP 协议采用了三次握手策略。\n\n### 2.1 TCP 三次握手漫画图解\n\n如下图所示，下面的两个机器人通过 3 次握手确定了对方能正确接收和发送消息(图片来源：《图解 HTTP》)。\n![TCP三次握手](计算机网络.assets/三次握手.png)\n\n**简单示意图：**\n![TCP三次握手](计算机网络.assets/三次握手2.png)\n\n- 客户端–发送带有 SYN 标志的数据包–一次握手–服务端\n- 服务端–发送带有 SYN/ACK 标志的数据包–二次握手–客户端\n- 客户端–发送带有带有 ACK 标志的数据包–三次握手–服务端\n\n**详细示意图（图片来源不详）**\n\n![](计算机网络.assets/0c9f470819684156cfdc27c682db4def.png)\n\n### 2.2 为什么要三次握手\n\n**三次握手的目的是建立可靠的通信信道，说到通讯，简单来说就是数据的发送与接收，而三次握手最主要的目的就是双方确认自己与对方的发送与接收是正常的。**\n\n第一次握手：Client 什么都不能确认；Server 确认了对方发送正常，自己接收正常\n\n第二次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：对方发送正常，自己接收正常\n\n第三次握手：Client 确认了：自己发送、接收正常，对方发送、接收正常；Server 确认了：自己发送、接收正常，对方发送、接收正常\n\n所以三次握手就能确认双发收发功能都正常，缺一不可。\n\n### 2.3 第 2 次握手传回了 ACK，为什么还要传回 SYN？\n\n接收端传回发送端所发送的 ACK 是为了告诉客户端，我接收到的信息确实就是你所发送的信号了，这表明从客户端到服务端的通信是正常的。而回传 SYN 则是为了建立并确认从服务端到客户端的通信。”\n\n> SYN 同步序列编号(Synchronize Sequence Numbers) 是 TCP/IP 建立连接时使用的握手信号。在客户机和服务器之间建立正常的 TCP 网络连接时，客户机首先发出一个 SYN 消息，服务器使用 SYN-ACK 应答表示接收到了这个消息，最后客户机再以 ACK(Acknowledgement）消息响应。这样在客户机和服务器之间才能建立起可靠的 TCP 连接，数据才可以在客户机和服务器之间传递。\n\n### 2.5 为什么要四次挥手\n\n![TCP四次挥手](计算机网络.assets/TCP四次挥手.png)\n\n断开一个 TCP 连接则需要“四次挥手”：\n\n- 客户端-发送一个 FIN，用来关闭客户端到服务器的数据传送\n- 服务器-收到这个 FIN，它发回一 个 ACK，确认序号为收到的序号加 1 。和 SYN 一样，一个 FIN 将占用一个序号\n- 服务器-关闭与客户端的连接，发送一个 FIN 给客户端\n- 客户端-发回 ACK 报文确认，并将确认序号设置为收到序号加 1\n\n任何一方都可以在数据传送结束后发出连接释放的通知，待对方确认后进入半关闭状态。当另一方也没有数据再发送的时候，则发出连接释放通知，对方确认后就完全关闭了 TCP 连接。\n\n举个例子：A 和 B 打电话，通话即将结束后，A 说“我没啥要说的了”，B 回答“我知道了”，但是 B 可能还会有要说的话，A 不能要求 B 跟着自己的节奏结束通话，于是 B 可能又巴拉巴拉说了一通，最后 B 说“我说完了”，A 回答“知道了”，这样通话才算结束。\n\n上面讲的比较概括，推荐一篇讲的比较细致的文章：[https://blog.csdn.net/qzcsu/article/details/72861891](https://blog.csdn.net/qzcsu/article/details/72861891)\n\n## 三 TCP,UDP 协议的区别\n\n![TCP、UDP协议的区别](计算机网络.assets/tcp-vs-udp.jpg)\n\nUDP 在传送数据之前不需要先建立连接，远地主机在收到 UDP 报文后，不需要给出任何确认。虽然 UDP 不提供可靠交付，但在某些情况下 UDP 却是一种最有效的工作方式（一般用于即时通信），比如： QQ 语音、 QQ 视频 、直播等等\n\nTCP 提供面向连接的服务。在传送数据之前必须先建立连接，数据传送结束后要释放连接。 TCP 不提供广播或多播服务。由于 TCP 要提供可靠的，面向连接的传输服务（TCP 的可靠体现在 TCP 在传递数据之前，会有三次握手来建立连接，而且在数据传递时，有确认、窗口、重传、拥塞控制机制，在数据传完后，还会断开连接用来节约系统资源），这一难以避免增加了许多开销，如确认，流量控制，计时器以及连接管理等。这不仅使协议数据单元的首部增大很多，还要占用许多处理机资源。TCP 一般用于文件传输、发送和接收邮件、远程登录等场景。\n\n## 四 TCP 协议如何保证可靠传输\n\n1. 应用数据被分割成 TCP 认为最适合发送的数据块。\n2. TCP 给发送的每一个包进行编号，接收方对数据包进行排序，把有序数据传送给应用层。\n3. **校验和：** TCP 将保持它首部和数据的检验和。这是一个端到端的检验和，目的是检测数据在传输过程中的任何变化。如果收到段的检验和有差错，TCP 将丢弃这个报文段和不确认收到此报文段。\n4. TCP 的接收端会丢弃重复的数据。\n5. **流量控制：** TCP 连接的每一方都有固定大小的缓冲空间，TCP 的接收端只允许发送端发送接收端缓冲区能接纳的数据。当接收方来不及处理发送方的数据，能提示发送方降低发送的速率，防止包丢失。TCP 使用的流量控制协议是可变大小的滑动窗口协议。 （TCP 利用滑动窗口实现流量控制）\n6. **拥塞控制：** 当网络拥塞时，减少数据的发送。\n7. **ARQ 协议：** 也是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认。在收到确认后再发下一个分组。\n8. **超时重传：** 当 TCP 发出一个段后，它启动一个定时器，等待目的端确认收到这个报文段。如果不能及时收到一个确认，将重发这个报文段。\n\n### 4.1 ARQ 协议\n\n**自动重传请求**（Automatic Repeat-reQuest，ARQ）是 OSI 模型中数据链路层和传输层的错误纠正协议之一。它通过使用确认和超时这两个机制，在不可靠服务的基础上实现可靠的信息传输。如果发送方在发送后一段时间之内没有收到确认帧，它通常会重新发送。ARQ 包括停止等待 ARQ 协议和连续 ARQ 协议。\n\n#### 停止等待 ARQ 协议\n\n停止等待协议是为了实现可靠传输的，它的基本原理就是每发完一个分组就停止发送，等待对方确认（回复 ACK）。如果过了一段时间（超时时间后），还是没有收到 ACK 确认，说明没有发送成功，需要重新发送，直到收到确认后再发下一个分组。\n\n在停止等待协议中，若接收方收到重复分组，就丢弃该分组，但同时还要发送确认。\n\n**优缺点：**\n\n- **优点：** 简单\n- **缺点：** 信道利用率低，等待时间长\n\n**1) 无差错情况:**\n\n发送方发送分组,接收方在规定时间内收到,并且回复确认.发送方再次发送。\n\n**2) 出现差错情况（超时重传）:**\n\n停止等待协议中超时重传是指只要超过一段时间仍然没有收到确认，就重传前面发送过的分组（认为刚才发送过的分组丢失了）。因此每发送完一个分组需要设置一个超时计时器，其重传时间应比数据在分组传输的平均往返时间更长一些。这种自动重传方式常称为 **自动重传请求 ARQ** 。另外在停止等待协议中若收到重复分组，就丢弃该分组，但同时还要发送确认。**连续 ARQ 协议** 可提高信道利用率。发送维持一个发送窗口，凡位于发送窗口内的分组可连续发送出去，而不需要等待对方确认。接收方一般采用累积确认，对按序到达的最后一个分组发送确认，表明到这个分组位置的所有分组都已经正确收到了。\n\n**3) 确认丢失和确认迟到**\n\n- **确认丢失** ：确认消息在传输过程丢失。当 A 发送 M1 消息，B 收到后，B 向 A 发送了一个 M1 确认消息，但却在传输过程中丢失。而 A 并不知道，在超时计时过后，A 重传 M1 消息，B 再次收到该消息后采取以下两点措施：1. 丢弃这个重复的 M1 消息，不向上层交付。 2. 向 A 发送确认消息。（不会认为已经发送过了，就不再发送。A 能重传，就证明 B 的确认消息丢失）。\n- **确认迟到** ：确认消息在传输过程中迟到。A 发送 M1 消息，B 收到并发送确认。在超时时间内没有收到确认消息，A 重传 M1 消息，B 仍然收到并继续发送确认消息（B 收到了 2 份 M1）。此时 A 收到了 B 第二次发送的确认消息。接着发送其他数据。过了一会，A 收到了 B 第一次发送的对 M1 的确认消息（A 也收到了 2 份确认消息）。处理如下：1. A 收到重复的确认后，直接丢弃。2. B 收到重复的 M1 后，也直接丢弃重复的 M1。\n\n#### 连续 ARQ 协议\n\n连续 ARQ 协议可提高信道利用率。发送方维持一个发送窗口，凡位于发送窗口内的分组可以连续发送出去，而不需要等待对方确认。接收方一般采用累计确认，对按序到达的最后一个分组发送确认，表明到这个分组为止的所有分组都已经正确收到了。\n\n**优缺点：**\n\n- **优点：** 信道利用率高，容易实现，即使确认丢失，也不必重传。\n- **缺点：** 不能向发送方反映出接收方已经正确收到的所有分组的信息。 比如：发送方发送了 5 条 消息，中间第三条丢失（3 号），这时接收方只能对前两个发送确认。发送方无法知道后三个分组的下落，而只好把后三个全部重传一次。这也叫 Go-Back-N（回退 N），表示需要退回来重传已经发送过的 N 个消息。\n\n### 4.2 滑动窗口和流量控制\n\n**TCP 利用滑动窗口实现流量控制。流量控制是为了控制发送方发送速率，保证接收方来得及接收。** 接收方发送的确认报文中的窗口字段可以用来控制发送方窗口大小，从而影响发送方的发送速率。将窗口字段设置为 0，则发送方不能发送数据。\n\n### 4.3 拥塞控制\n\n在某段时间，若对网络中某一资源的需求超过了该资源所能提供的可用部分，网络的性能就要变坏。这种情况就叫拥塞。拥塞控制就是为了防止过多的数据注入到网络中，这样就可以使网络中的路由器或链路不致过载。拥塞控制所要做的都有一个前提，就是网络能够承受现有的网络负荷。拥塞控制是一个全局性的过程，涉及到所有的主机，所有的路由器，以及与降低网络传输性能有关的所有因素。相反，流量控制往往是点对点通信量的控制，是个端到端的问题。流量控制所要做到的就是抑制发送端发送数据的速率，以便使接收端来得及接收。\n\n为了进行拥塞控制，TCP 发送方要维持一个 **拥塞窗口(cwnd)** 的状态变量。拥塞控制窗口的大小取决于网络的拥塞程度，并且动态变化。发送方让自己的发送窗口取为拥塞窗口和接收方的接受窗口中较小的一个。\n\nTCP 的拥塞控制采用了四种算法，即 **慢开始** 、 **拥塞避免** 、**快重传** 和 **快恢复**。在网络层也可以使路由器采用适当的分组丢弃策略（如主动队列管理 AQM），以减少网络拥塞的发生。\n\n- **慢开始：** 慢开始算法的思路是当主机开始发送数据时，如果立即把大量数据字节注入到网络，那么可能会引起网络阻塞，因为现在还不知道网络的符合情况。经验表明，较好的方法是先探测一下，即由小到大逐渐增大发送窗口，也就是由小到大逐渐增大拥塞窗口数值。cwnd 初始值为 1，每经过一个传播轮次，cwnd 加倍。\n- **拥塞避免：** 拥塞避免算法的思路是让拥塞窗口 cwnd 缓慢增大，即每经过一个往返时间 RTT 就把发送放的 cwnd 加 1.\n- **快重传与快恢复：**\n  在 TCP/IP 中，快速重传和恢复（fast retransmit and recovery，FRR）是一种拥塞控制算法，它能快速恢复丢失的数据包。没有 FRR，如果数据包丢失了，TCP 将会使用定时器来要求传输暂停。在暂停的这段时间内，没有新的或复制的数据包被发送。有了 FRR，如果接收机接收到一个不按顺序的数据段，它会立即给发送机发送一个重复确认。如果发送机接收到三个重复确认，它会假定确认件指出的数据段丢失了，并立即重传这些丢失的数据段。有了 FRR，就不会因为重传时要求的暂停被耽误。 　当有单独的数据包丢失时，快速重传和恢复（FRR）能最有效地工作。当有多个数据信息包在某一段很短的时间内丢失时，它则不能很有效地工作。\n\n## 五 在浏览器中输入 url 地址 ->> 显示主页的过程(面试常客)\n\n百度好像最喜欢问这个问题。\n\n> 打开一个网页，整个过程会使用哪些协议？\n\n图解（图片来源：《图解 HTTP》）：\n\n![](计算机网络.assets/url输入到展示出来的过程-1635564353216.jpg)\n\n\n\n> 上图有一个错误，请注意，是 OSPF 不是 OPSF。 OSPF（Open Shortest Path First，ospf）开放最短路径优先协议,是由 Internet 工程任务组开发的路由选择协议\n\n总体来说分为以下几个过程:\n\n1. DNS 解析\n2. TCP 连接\n3. 发送 HTTP 请求\n4. 服务器处理请求并返回 HTTP 报文\n5. 浏览器解析渲染页面\n6. 连接结束\n\n具体可以参考下面这篇文章：\n\n- [https://segmentfault.com/a/1190000006879700](https://segmentfault.com/a/1190000006879700)\n\n## 六 状态码\n\n![状态码](计算机网络.assets/状态码.png)\n\n## 七 各种协议与 HTTP 协议之间的关系\n\n一般面试官会通过这样的问题来考察你对计算机网络知识体系的理解。\n\n图片来源：《图解 HTTP》\n\n![各种协议与HTTP协议之间的关系](计算机网络.assets/各种协议与HTTP协议之间的关系.png)\n\n## 八 HTTP 长连接,短连接\n\n在 HTTP/1.0 中默认使用短连接。也就是说，客户端和服务器每进行一次 HTTP 操作，就建立一次连接，任务结束就中断连接。当客户端浏览器访问的某个 HTML 或其他类型的 Web 页中包含有其他的 Web 资源（如 JavaScript 文件、图像文件、CSS 文件等），每遇到这样一个 Web 资源，浏览器就会重新建立一个 HTTP 会话。\n\n而从 HTTP/1.1 起，默认使用长连接，用以保持连接特性。使用长连接的 HTTP 协议，会在响应头加入这行代码：\n\n```\nConnection:keep-alive\n```\n\n在使用长连接的情况下，当一个网页打开完成后，客户端和服务器之间用于传输 HTTP 数据的 TCP 连接不会关闭，客户端再次访问这个服务器时，会继续使用这一条已经建立的连接。Keep-Alive 不会永久保持连接，它有一个保持时间，可以在不同的服务器软件（如 Apache）中设定这个时间。实现长连接需要客户端和服务端都支持长连接。\n\n**HTTP 协议的长连接和短连接，实质上是 TCP 协议的长连接和短连接。**\n\n—— [《HTTP 长连接、短连接究竟是什么？》](https://www.cnblogs.com/gotodsp/p/6366163.html)\n\n## 九 HTTP 是不保存状态的协议,如何保存用户状态?\n\nHTTP 是一种不保存状态，即无状态（stateless）协议。也就是说 HTTP 协议自身不对请求和响应之间的通信状态进行保存。那么我们保存用户状态呢？Session 机制的存在就是为了解决这个问题，Session 的主要作用就是通过服务端记录用户的状态。典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了（一般情况下，服务器会在一定时间内保存这个 Session，过了时间限制，就会销毁这个 Session）。\n\n在服务端保存 Session 的方法很多，最常用的就是内存和数据库(比如是使用内存数据库 redis 保存)。既然 Session 存放在服务器端，那么我们如何实现 Session 跟踪呢？大部分情况下，我们都是通过在 Cookie 中附加一个 Session ID 来方式来跟踪。\n\n**Cookie 被禁用怎么办?**\n\n最常用的就是利用 URL 重写把 Session ID 直接附加在 URL 路径的后面。\n\n![HTTP是无状态协议](计算机网络.assets/HTTP是无状态的.png)\n\n## 十 Cookie 的作用是什么?和 Session 有什么区别？\n\nCookie 和 Session 都是用来跟踪浏览器用户身份的会话方式，但是两者的应用场景不太一样。\n\n**Cookie 一般用来保存用户信息** 比如 ① 我们在 Cookie 中保存已经登录过得用户信息，下次访问网站的时候页面可以自动帮你登录的一些基本信息给填了；② 一般的网站都会有保持登录也就是说下次你再访问网站的时候就不需要重新登录了，这是因为用户登录的时候我们可以存放了一个 Token 在 Cookie 中，下次登录的时候只需要根据 Token 值来查找用户即可(为了安全考虑，重新登录一般要将 Token 重写)；③ 登录一次网站后访问网站其他页面不需要重新登录。**Session 的主要作用就是通过服务端记录用户的状态。** 典型的场景是购物车，当你要添加商品到购物车的时候，系统不知道是哪个用户操作的，因为 HTTP 协议是无状态的。服务端给特定的用户创建特定的 Session 之后就可以标识这个用户并且跟踪这个用户了。\n\nCookie 数据保存在客户端(浏览器端)，Session 数据保存在服务器端。\n\nCookie 存储在客户端中，而 Session 存储在服务器上，相对来说 Session 安全性更高。如果要在 Cookie 中存储一些敏感信息，不要直接写入 Cookie 中，最好能将 Cookie 信息加密然后使用到的时候再去服务器端解密。\n\n## 十一 HTTP 1.0 和 HTTP 1.1 的主要区别是什么?\n\n> 这部分回答引用这篇文章 <https://mp.weixin.qq.com/s/GICbiyJpINrHZ41u_4zT-A?> 的一些内容。\n\nHTTP1.0 最早在网页中使用是在 1996 年，那个时候只是使用一些较为简单的网页上和网络请求上，而 HTTP1.1 则在 1999 年才开始广泛应用于现在的各大浏览器网络请求中，同时 HTTP1.1 也是当前使用最为广泛的 HTTP 协议。 主要区别主要体现在：\n\n1. **长连接** : **在 HTTP/1.0 中，默认使用的是短连接**，也就是说每次请求都要重新建立一次连接。HTTP 是基于 TCP/IP 协议的,每一次建立或者断开连接都需要三次握手四次挥手的开销，如果每次请求都要这样的话，开销会比较大。因此最好能维持一个长连接，可以用个长连接来发多个请求。**HTTP 1.1 起，默认使用长连接** ,默认开启 Connection： keep-alive。 **HTTP/1.1 的持续连接有非流水线方式和流水线方式** 。流水线方式是客户在收到 HTTP 的响应报文之前就能接着发送新的请求报文。与之相对应的非流水线方式是客户在收到前一个响应后才能发送下一个请求。\n1. **错误状态响应码** :在 HTTP1.1 中新增了 24 个错误状态响应码，如 409（Conflict）表示请求的资源与资源的当前状态发生冲突；410（Gone）表示服务器上的某个资源被永久性的删除。\n1. **缓存处理** :在 HTTP1.0 中主要使用 header 里的 If-Modified-Since,Expires 来做为缓存判断的标准，HTTP1.1 则引入了更多的缓存控制策略例如 Entity tag，If-Unmodified-Since, If-Match, If-None-Match 等更多可供选择的缓存头来控制缓存策略。\n1. **带宽优化及网络连接的使用** :HTTP1.0 中，存在一些浪费带宽的现象，例如客户端只是需要某个对象的一部分，而服务器却将整个对象送过来了，并且不支持断点续传功能，HTTP1.1 则在请求头引入了 range 头域，它允许只请求资源的某个部分，即返回码是 206（Partial Content），这样就方便了开发者自由的选择以便于充分利用带宽和连接。\n\n## 十二 URI 和 URL 的区别是什么?\n\n- URI(Uniform Resource Identifier) 是统一资源标志符，可以唯一标识一个资源。\n- URL(Uniform Resource Locator) 是统一资源定位符，可以提供该资源的路径。它是一种具体的 URI，即 URL 可以用来标识一个资源，而且还指明了如何 locate 这个资源。\n\nURI 的作用像身份证号一样，URL 的作用更像家庭住址一样。URL 是一种具体的 URI，它不仅唯一标识资源，而且还提供了定位该资源的信息。\n\n## 十三 HTTP 和 HTTPS 的区别？\n\n1. **端口** ：HTTP 的 URL 由“http://”起始且默认使用端口80，而HTTPS的URL由“https://”起始且默认使用端口443。\n2. **安全性和资源消耗：** HTTP 协议运行在 TCP 之上，所有传输的内容都是明文，客户端和服务器端都无法验证对方的身份。HTTPS 是运行在 SSL/TLS 之上的 HTTP 协议，SSL/TLS 运行在 TCP 之上。所有传输的内容都经过加密，加密采用对称加密，但对称加密的密钥用服务器方的证书进行了非对称加密。所以说，HTTP 安全性没有 HTTPS 高，但是 HTTPS 比 HTTP 耗费更多服务器资源。\n   - 对称加密：密钥只有一个，加密解密为同一个密码，且加解密速度快，典型的对称加密算法有 DES、AES 等；\n   - 非对称加密：密钥成对出现（且根据公钥无法推知私钥，根据私钥也无法推知公钥），加密解密使用不同密钥（公钥加密需要私钥解密，私钥加密需要公钥解密），相对对称加密速度较慢，典型的非对称加密算法有 RSA、DSA 等。\n\n## 建议\n\n非常推荐大家看一下 《图解 HTTP》 这本书，这本书页数不多，但是内容很是充实，不管是用来系统的掌握网络方面的一些知识还是说纯粹为了应付面试都有很大帮助。下面的一些文章只是参考。大二学习这门课程的时候，我们使用的教材是 《计算机网络第七版》（谢希仁编著），不推荐大家看这本教材，书非常厚而且知识偏理论，不确定大家能不能心平气和的读完。\n\n## 参考\n\n- [https://blog.csdn.net/qq_16209077/article/details/52718250](https://blog.csdn.net/qq_16209077/article/details/52718250)\n- [https://blog.csdn.net/zixiaomuwu/article/details/60965466](https://blog.csdn.net/zixiaomuwu/article/details/60965466)\n- [https://blog.csdn.net/turn\\_\\_back/article/details/73743641](https://blog.csdn.net/turn__back/article/details/73743641)\n- <https://mp.weixin.qq.com/s/GICbiyJpINrHZ41u_4zT-A?>\n"},8352:function(n,t,e){"use strict";e.r(t),t["default"]="\x3c!-- TOC --\x3e\n\n- [1. SSL 与 TLS](#1-ssl-%E4%B8%8E-tls)\n- [2. 从网络协议的角度理解 HTTPS](#2-%E4%BB%8E%E7%BD%91%E7%BB%9C%E5%8D%8F%E8%AE%AE%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3-https)\n- [3. 从密码学的角度理解 HTTPS](#3-%E4%BB%8E%E5%AF%86%E7%A0%81%E5%AD%A6%E7%9A%84%E8%A7%92%E5%BA%A6%E7%90%86%E8%A7%A3-https)\n  - [3.1. TLS 工作流程](#31-tls-%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B)\n  - [3.2. 密码基础](#32-%E5%AF%86%E7%A0%81%E5%9F%BA%E7%A1%80)\n    - [3.2.1. 伪随机数生成器](#321-%E4%BC%AA%E9%9A%8F%E6%9C%BA%E6%95%B0%E7%94%9F%E6%88%90%E5%99%A8)\n    - [3.2.2. 消息认证码](#322-%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81)\n    - [3.2.3. 数字签名](#323-%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D)\n    - [3.2.4. 公钥密码](#324-%E5%85%AC%E9%92%A5%E5%AF%86%E7%A0%81)\n    - [3.2.5. 证书](#325-%E8%AF%81%E4%B9%A6)\n    - [3.2.6. 密码小结](#326-%E5%AF%86%E7%A0%81%E5%B0%8F%E7%BB%93)\n  - [3.3. TLS 使用的密码技术](#33-tls-%E4%BD%BF%E7%94%A8%E7%9A%84%E5%AF%86%E7%A0%81%E6%8A%80%E6%9C%AF)\n  - [3.4. TLS 总结](#34-tls-%E6%80%BB%E7%BB%93)\n- [4. RSA 简单示例](#4-rsa-%E7%AE%80%E5%8D%95%E7%A4%BA%E4%BE%8B)\n- [5. 参考](#5-%E5%8F%82%E8%80%83)\n\n\x3c!-- TOC --\x3e\n\n# 1. SSL 与 TLS\n\nSSL：（Secure Socket Layer） 安全套接层，于 1994 年由网景公司设计，并于 1995 年发布了 3.0 版本  \nTLS：（Transport Layer Security）传输层安全性协议，是 IETF 在 SSL3.0 的基础上设计的协议  \n以下全部使用 TLS 来表示\n\n# 2. 从网络协议的角度理解 HTTPS\n\n\n\n![image-20211030111617275](HTTPS中的TLS.assets/image-20211030111617275.png)\n\n\n\nHTTP：HyperText Transfer Protocol 超文本传输协议  \nHTTPS：Hypertext Transfer Protocol Secure 超文本传输安全协议  \nTLS：位于 HTTP 和 TCP 之间的协议，其内部有 TLS握手协议、TLS记录协议  \nHTTPS 经由 HTTP 进行通信，但利用 TLS 来保证安全，即 HTTPS = HTTP + TLS\n\n# 3. 从密码学的角度理解 HTTPS\n\nHTTPS 使用 TLS 保证安全，这里的“安全”分两部分，一是传输内容加密、二是服务端的身份认证\n\n## 3.1. TLS 工作流程\n\n![image-20211030112309814](HTTPS中的TLS.assets/image-20211030112309814.png)\n\n\n此为服务端单向认证，还有客户端/服务端双向认证，流程类似，只不过客户端也有自己的证书，并发送给服务器进行验证\n\n## 3.2. 密码基础\n\n### 3.2.1. 伪随机数生成器\n\n为什么叫伪随机数，因为没有真正意义上的随机数，具体可以参考 Random/TheadLocalRandom  \n它的主要作用在于生成对称密码的秘钥、用于公钥密码生成秘钥对\n\n### 3.2.2. 消息认证码\n\n消息认证码主要用于验证消息的完整性与消息的认证，其中消息的认证指“消息来自正确的发送者”  \n\n>消息认证码用于验证和认证，而不是加密  \n\n![image-20211030112127078](HTTPS中的TLS.assets/image-20211030112127078.png)  \n\n1. 发送者与接收者事先共享秘钥\n2. 发送者根据发送消息计算 MAC 值\n3. 发送者发送消息和 MAC 值  \n4. 接收者根据接收到的消息计算 MAC 值\n5. 接收者根据自己计算的 MAC 值与收到的 MAC 对比\n6. 如果对比成功，说明消息完整，并来自于正确的发送者\n\n### 3.2.3. 数字签名\n\n消息认证码的缺点在于**无法防止否认**，因为共享秘钥被 client、server 两端拥有，server 可以伪造 client 发送给自己的消息（自己给自己发送消息），为了解决这个问题，我们需要它们有各自的秘钥不被第二个知晓（这样也解决了共享秘钥的配送问题）  \n\n![image-20211030112057839](HTTPS中的TLS.assets/image-20211030112057839.png)  \n\n>数字签名和消息认证码都**不是为了加密**  \n>可以将单向散列函数获取散列值的过程理解为使用 md5 摘要算法获取摘要的过程  \n\n使用自己的私钥对自己所认可的消息生成一个该消息专属的签名，这就是数字签名，表明我承认该消息来自自己  \n注意：**私钥用于加签，公钥用于解签，每个人都可以解签，查看消息的归属人**  \n\n### 3.2.4. 公钥密码\n\n公钥密码也叫非对称密码，由公钥和私钥组成，它最开始是为了解决秘钥的配送传输安全问题，即，我们不配送私钥，只配送公钥，私钥由本人保管    \n它与数字签名相反，公钥密码的私钥用于解密、公钥用于加密，每个人都可以用别人的公钥加密，但只有对应的私钥才能解开密文  \nclient：明文 + 公钥 = 密文  \nserver：密文 + 私钥 = 明文  \n注意：**公钥用于加密，私钥用于解密，只有私钥的归属者，才能查看消息的真正内容**   \n\n### 3.2.5. 证书\n\n证书：全称公钥证书（Public-Key Certificate, PKC）,里面保存着归属者的基本信息，以及证书过期时间、归属者的公钥，并由认证机构（Certification Authority, **CA**）施加数字签名，表明，某个认证机构认定该公钥的确属于此人  \n\n\n\n>想象这个场景：你想在支付宝页面交易，你需要支付宝的公钥进行加密通信，于是你从百度上搜索关键字“支付宝公钥”，你获得了支什宝的公钥，这个时候，支什宝通过中间人攻击，让你访问到了他们支什宝的页面，最后你在这个支什宝页面完美的使用了支什宝的公钥完成了与支什宝的交易\n>   ![image-20211030111959188](HTTPS中的TLS.assets/image-20211030111959188.png)\n\n在上面的场景中，你可以理解支付宝证书就是由支付宝的公钥、和给支付宝颁发证书的企业的数字签名组成  \n任何人都可以给自己或别人的公钥添加自己的数字签名，表明：我拿我的尊严担保，我的公钥/别人的公钥是真的，至于信不信那是另一回事了\n\n### 3.2.6. 密码小结\n\n| 密码 | 作用 | 组成 |\n| :-- | :-- | :-- |\n| 消息认证码 | 确认消息的完整、并对消息的来源认证 | 共享秘钥+消息的散列值 |\n| 数字签名   | 对消息的散列值签名 | 公钥+私钥+消息的散列值 |\n| 公钥密码   | 解决秘钥的配送问题 | 公钥+私钥+消息 |\n| 证书      | 解决公钥的归属问题 | 公钥密码中的公钥+数字签名 |\n\n## 3.3. TLS 使用的密码技术\n\n1. 伪随机数生成器：秘钥生成随机性，更难被猜测\n2. 对称密码：对称密码使用的秘钥就是由伪随机数生成，相较于非对称密码，效率更高\n3. 消息认证码：保证消息信息的完整性、以及验证消息信息的来源\n4. 公钥密码：证书技术使用的就是公钥密码\n5. 数字签名：验证证书的签名，确定由真实的某个 CA 颁发 \n6. 证书：解决公钥的真实归属问题，降低中间人攻击概率   \n\n## 3.4. TLS 总结\n\nTLS 是一系列密码工具的框架，作为框架，它也是非常的灵活，体现在每个工具套件它都可以替换，即：客户端与服务端之间协商密码套件，从而更难的被攻破，例如使用不同方式的对称密码，或者公钥密码、数字签名生成方式、单向散列函数技术的替换等\n\n# 4. RSA 简单示例\n\nRSA 是一种公钥密码算法，我们简单的走一遍它的加密解密过程  \n加密算法：密文 = (明文^E) mod N，其中公钥为{E,N}，即”求明文的E次方的对 N 的余数“  \n解密算法：明文 = (密文^D) mod N，其中秘钥为{D,N}，即”求密文的D次方的对 N 的余数“  \n例：我们已知公钥为{5,323}，私钥为{29,323}，明文为300，请写出加密和解密的过程：  \n>加密：密文 = 123 ^ 5 mod 323 = 225  \n>解密：明文 = 225 ^ 29 mod 323 = [[(225 ^ 5) mod 323] * [(225 ^ 5) mod 323] * [(225 ^ 5) mod 323] * [(225 ^ 5) mod 323] * [(225 ^ 5) mod 323] * [(225 ^ 4) mod 323]] mod 323 = (4 * 4 * 4 * 4 * 4 * 290) mod 323 = 123\n\n# 5. 参考\n\n1. SSL加密发生在哪里：<https://security.stackexchange.com/questions/19681/where-does-ssl-encryption-take-place>  \n2. TLS工作流程：<https://blog.csdn.net/ustccw/article/details/76691248>  \n3. 《图解密码技术》：<https://book.douban.com/subject/26822106/> 豆瓣评分 9.5\n\n[1]: https://leran2deeplearnjavawebtech.oss-cn-beijing.aliyuncs.com/somephoto/%E4%B8%83%E5%B1%82.png\n[2]: https://leran2deeplearnjavawebtech.oss-cn-beijing.aliyuncs.com/somephoto/tls%E6%B5%81%E7%A8%8B.png\n[3]: https://leran2deeplearnjavawebtech.oss-cn-beijing.aliyuncs.com/somephoto/%E6%B6%88%E6%81%AF%E8%AE%A4%E8%AF%81%E7%A0%81%E8%BF%87%E7%A8%8B.png\n[4]: https://leran2deeplearnjavawebtech.oss-cn-beijing.aliyuncs.com/somephoto/%E6%95%B0%E5%AD%97%E7%AD%BE%E5%90%8D%E8%BF%87%E7%A8%8B.png\n[5]: https://leran2deeplearnjavawebtech.oss-cn-beijing.aliyuncs.com/somephoto/dns%E4%B8%AD%E9%97%B4%E4%BA%BA%E6%94%BB%E5%87%BB.png"},"9c39":function(n,t,e){var o={"./HTTPS中的TLS.md":"8352","./计算机网络.md":"8163","./计算机网络知识总结.md":"129f"};function i(n){var t=a(n);return e(t)}function a(n){if(!e.o(o,n)){var t=new Error("Cannot find module '"+n+"'");throw t.code="MODULE_NOT_FOUND",t}return o[n]}i.keys=function(){return Object.keys(o)},i.resolve=a,n.exports=i,i.id="9c39"}}]);